{
  "id": "18871f43-b480-43df-9584-1ee1ca3d38a4",
  "meta": {
    "name": "Yearbook Photo Studio",
    "author": "Anonymous",
    "description": "Utilise a combination of LLM, the text-to-image Stable Diffusion XL Model, and face-swap techniques to transform a user's current photo into a retro yearbook image",
    "category": "",
    "help": "## üìöü§ñ **Yearbook Photo Studio**\n\nüåü Welcome to the studio! Dive into this recipe, which combines three models from the **Replicate** extension and **LLM** to craft your retro yearbook photo.\n\n***Disclaimer:***\n*The recipe is intended for entertainment and learning purposes only. Misuse of this technology for deception, fraud, malicious intent, or any illegal activities is strictly prohibited and could lead to legal consequences.*\n\n*The gender determination is provided for image generation based on patterns and may not represent an individual's actual identity. Be aware that biases might exist. Results are the model's estimations, so please interpret with caution.*\n\n### üõ† **Prerequisites**:\nEnsure that your API keys are correctly set up in the **API Key Management** section, and extensions are installed in the **Extensions** section found in the left panel. Once you have done this, the required model should be automatically installed when you load this recipe. However, you can also open the Replicate extension to install a specific model.\n\nüîë **API Keys**:\n- **OpenAI**\n- **Replicate**\n\nüîó **Extensions**:\n- **Replicate (pre-installed)**\n\nü§ñ **Models**:\n- **Large Language Model**: Default to OpenAI GPT 3.5 but recommended trying out GPT 4 if [available](https://help.openai.com/en/articles/7102672-how-can-i-access-gpt-4).\n- **Image-to-text (CLIP)**: Replicate: `rmokady/clip_prefix_caption`\n- **Text-to-image (Stable Diffusion XL)**: Replicate: `stability-ai/sdxl`\n- **Faceswap**: Replicate: `lucataco/faceswap`\n\n### üöÄ **How to Use**:\n\n1. Navigate to the **Chat** window.\n2. Upload your head photo or simply click on the üì∏ camera to take a selfie.\n3. Hit the ‚ñ∂Ô∏è **Run** button!\n4. üéâ Revel in your AI-generated yearbook photo displayed in the chat!\n\n### üé® **Further Exploration**:\n- **Deep Dive into the Recipe**: Enter `/explain` in the chat to reveal a detailed summary of this recipe.\n- **Experiment by Adjusting the Parameters**: Customise the prompt, adjust the parameters for text-to-image and LLM blocks, and select different models to explore varied image results.\n- **Nickname Your Recipe**: To give the recipe a nickname, type the command `/setname photo` in the chat. After setting up the nickname, you can trigger this recipe by typing `@photo` in the chat anytime in any recipe!\n- **Adding Extra Blocks**: For an extra  on the image, visit the [Replicate website](https://replicate.com/explore) to explore some models. Add your chosen model in the **Replicate extension**, and integrate that new block in this recipe for a personalized effect. In addition, you can install another extension called **Sharp Image Processing**. Once installed, you'll be able to find some image manipulation blocks by searching for **Sharp**.\n\n### ü§î **Learning Reflections**\n- **Ethical Implications:** \n  - Face-swapping technology, or deepfakes, harbors ethical issues like non-consensual pornography, misrepresentation, and corporate sabotage. This technology challenges our visually-driven culture, invoking questions on visual ethics. Understanding these ethical considerations is vital for responsible app development and use. The ethical discourse, often leaning towards legal and technological facets, helps anticipate potential misuse and societal impact of this technology.\n- **Bias in Models:** \n  - Machine learning models, including those that interpret dress and appearance, are trained on vast datasets and may inadvertently learn societal biases. These models might associate certain styles of dress or appearance with specific genders based on existing data. Recognizing and understanding these inherent biases is essential. It helps us question and possibly rectify the preconceived notions a model might have, ensuring more inclusive and fairer applications.\n- **Legal Implication:** \n  - Many countries uphold laws safeguarding an individual's likeness. Using someone's likeness without permission, particularly in unflattering or out-of-context scenarios, can lead to legal repercussions. Additionally, brand and trademark considerations might come into play based on the material's nature.",
    "created": 1697643682951,
    "updated": 1697643682951,
    "pictureUrl": "yearbook_001.jpg",
    "tags": [
      "#lifestyle",
      "#art",
      "#faceswap",
      "#intermediate",
      "#diffusion"
    ]
  },
  "rete": {
    "id": "mercs@0.1.1",
    "nodes": {
      "701": {
        "id": 701,
        "data": {
          "enabled": true,
          "swap_image": "https://replicate.delivery/pbxt/JN97ny6RmjfrxizbgyHnPGGP8Kxzw6UI20ekarOg7dbo02Pi/elon.jpg",
          "target_image": "https://replicate.delivery/pbxt/JN97nntkJiijxKQ4iY8JUvVmy9PwY3VETJjBVUczrIqr2pwP/tony.jpg",
          "x-omni-comment": "Faceswap with face enhancer\n\n**In this recipe**, we use faceswap (Roop) to place your target face onto the yearbook photo base image .",
          "x-omni-title": "Replicate: lucataco/faceswap",
          "xOmniEnabled": true
        },
        "inputs": {
          "swap_image": {
            "connections": [
              {
                "node": 1326,
                "output": "images",
                "data": {}
              }
            ]
          },
          "enabled": {
            "connections": []
          },
          "target_image": {
            "connections": [
              {
                "node": 1018,
                "output": "output",
                "data": {}
              }
            ]
          }
        },
        "outputs": {
          "output": {
            "connections": [
              {
                "node": 702,
                "input": "images",
                "data": {}
              }
            ]
          }
        },
        "position": [
          1588.8491102346381,
          -814.3882651004633
        ],
        "name": "omni-core-replicate:run.lucataco/faceswap"
      },
      "702": {
        "id": 702,
        "data": {
          "audio": "",
          "documents": "",
          "enabled": true,
          "files": "",
          "images": "",
          "object": "",
          "persistData": "Permanent",
          "text": "",
          "textType": "text/markdown",
          "videos": "",
          "x-omni-comment": "Send data from this block's input to the chat window. Images, Audio, Documents and Video are automatically embedded as interactive elements.\n\n**In this recipe**, we use this to send the final image back to the chat.",
          "xOmniEnabled": true
        },
        "inputs": {
          "text": {
            "connections": []
          },
          "images": {
            "connections": [
              {
                "node": 701,
                "output": "output",
                "data": {}
              }
            ]
          },
          "audio": {
            "connections": []
          },
          "documents": {
            "connections": []
          },
          "videos": {
            "connections": []
          },
          "files": {
            "connections": []
          },
          "object": {
            "connections": []
          },
          "persistData": {
            "connections": []
          }
        },
        "outputs": {},
        "position": [
          2088.068981012729,
          -769.4996685859712
        ],
        "name": "omnitool.chat_output"
      },
      "1018": {
        "id": 1018,
        "data": {
          "apply_watermark": true,
          "enabled": true,
          "guidance_scale": 7.5,
          "height": 1024,
          "high_noise_frac": 0.8,
          "image": "",
          "lora_scale": 0.6,
          "mask": "",
          "negative_prompt": "nsfw, sexy, nude, cartoon, illustration, animation, extra detail, chaotic distribution of objects",
          "num_inference_steps": 50,
          "num_outputs": 1,
          "prompt": "a portrait style professional photograph, close-up, messy shoulder-length waves hairstyle, chestnut brown hair color, high quality, detailed, sharp focus, vibrant colors, 4k, 8k",
          "prompt_strength": 1,
          "refine": "expert_ensemble_refiner",
          "refine_steps": 0,
          "replicate_weights": "",
          "scheduler": "K_EULER",
          "width": 1024,
          "x-omni-comment": "A text-to-image generative AI model that creates beautiful images\n\n**In this recipe**, we utilize the SDXL model to create a retro yearbook photo as our base image. This is derived from the prompt we generated earlier, and we also use negative prompt to enhance the result. For more insights, hover over the parameters to see the tooltips, or refer to [https://replicate.com/stability-ai/sdxl](https://replicate.com/stability-ai/sdxl).",
          "xOmniEnabled": true
        },
        "inputs": {
          "mask": {
            "connections": []
          },
          "enabled": {
            "connections": []
          },
          "seed": {
            "connections": []
          },
          "image": {
            "connections": []
          },
          "width": {
            "connections": []
          },
          "height": {
            "connections": []
          },
          "prompt": {
            "connections": [
              {
                "node": 1407,
                "output": "text",
                "data": {}
              }
            ]
          },
          "refine": {
            "connections": []
          },
          "scheduler": {
            "connections": []
          },
          "lora_scale": {
            "connections": []
          },
          "num_outputs": {
            "connections": []
          },
          "refine_steps": {
            "connections": []
          },
          "guidance_scale": {
            "connections": []
          },
          "apply_watermark": {
            "connections": []
          },
          "high_noise_frac": {
            "connections": []
          },
          "negative_prompt": {
            "connections": []
          },
          "prompt_strength": {
            "connections": []
          },
          "replicate_weights": {
            "connections": []
          },
          "num_inference_steps": {
            "connections": []
          }
        },
        "outputs": {
          "output": {
            "connections": [
              {
                "node": 701,
                "input": "target_image",
                "data": {}
              }
            ]
          }
        },
        "position": [
          1032.9604504496153,
          -655.7061370517856
        ],
        "name": "omni-core-replicate:run.stability-ai/sdxl"
      },
      "1326": {
        "id": 1326,
        "data": {
          "audio": "",
          "documents": "",
          "images": "",
          "text": "",
          "video": "",
          "x-omni-comment": "Receive data (text, images, audio, video, and documents) directly from the chat window, transforming the recipe into a simple chatbot.\nText, images, audio, video and documents are supplied via chat by typing and/or uploading.\nThe JSON output is automatically populated if the text is valid JSON.\n\n\n**In this recipe**, the Chat Input block is used to receive the target face image that will be used for face swapping.",
          "x-omni-title": "Chat Input",
          "xOmniEnabled": true
        },
        "inputs": {
          "text": {
            "connections": []
          },
          "images": {
            "connections": []
          },
          "audio": {
            "connections": []
          },
          "video": {
            "connections": []
          },
          "documents": {
            "connections": []
          }
        },
        "outputs": {
          "text": {
            "connections": []
          },
          "images": {
            "connections": [
              {
                "node": 701,
                "input": "swap_image",
                "data": {}
              },
              {
                "node": 1339,
                "input": "image",
                "data": {}
              }
            ]
          },
          "audio": {
            "connections": []
          },
          "video": {
            "connections": []
          },
          "documents": {
            "connections": []
          },
          "json": {
            "connections": []
          }
        },
        "position": [
          -452.14170336942993,
          -887.5780898912452
        ],
        "name": "omnitool.chat_input"
      },
      "1327": {
        "id": 1327,
        "data": {
          "author": "Omnitool.ai team",
          "button": "",
          "credits": "OpenAI, Stability AI, Replicate, Ron Mokady and Amir Hertz, @lucataco93",
          "description": "Utilise a combination of LLM, the text-to-image Stable Diffusion XL Model, and face-swap techniques to transform a user's current photo into a retro yearbook image",
          "help": "## üìöü§ñ **Yearbook Photo Studio**\n\nüåü Welcome to the studio! Dive into this recipe, which combines three models from the **Replicate** extension and **LLM** to craft your retro yearbook photo.\n\n### üõ† **Prerequisites**:\n\nüîë **API Keys**:\n- **OpenAI**\n- **Replicate**\n\nüîó **Extensions**:\n- **Replicate**\n\nü§ñ **Models**:\n- **Large Language Model**: Default to OpenAI GPT 3.5\n- **Image-to-text (CLIP)**: Replicate: `rmokady/clip_prefix_caption`\n- **Text-to-image (Stable Diffusion XL)**: Replicate: `stability-ai/sdxl`\n- **Faceswap**: Replicate: `lucataco/faceswap`\n\n### üöÄ **How to Use**:\n\n1. Navigate to the **Chat** window.\n2. Upload your head photo or simply click on the üì∏ camera to take a selfie.\n3. Hit the ‚ñ∂Ô∏è **Run** button!\n4. üéâ Revel in your AI-generated yearbook photo displayed in the chat!\n\n### üßê Want to Dive Deeper?\n- Enter **/explain** in the chat to uncover a detailed breakdown of this recipe!",
          "license": "CC0",
          "tags": [
            "#lifestyle",
            "#art",
            "#faceswap",
            "#intermediate",
            "#diffusion",
            "template"
          ],
          "title": "Yearbook Photo Studio",
          "xOmniEnabled": true
        },
        "inputs": {},
        "outputs": {},
        "position": [
          -931.699396267222,
          -896.3334884708904
        ],
        "name": "omnitool.recipe_metadata"
      },
      "1338": {
        "id": 1338,
        "data": {
          "audio": "",
          "documents": "",
          "files": "",
          "images": "",
          "object": "",
          "persistData": "Permanent",
          "text": "",
          "textType": "text/markdown",
          "videos": "",
          "x-omni-comment": "Send data from this block's input to the chat window. Images, Audio, Documents and Video are automatically embedded as interactive elements.\n\n**In this recipe**, you can connect any socket to the Chat Output block to display data in the chat. This offers transparency into the results at each stage.",
          "xOmniEnabled": true
        },
        "inputs": {
          "text": {
            "connections": [
              {
                "node": 1407,
                "output": "text",
                "data": {}
              }
            ]
          },
          "images": {
            "connections": []
          },
          "audio": {
            "connections": []
          },
          "documents": {
            "connections": []
          },
          "videos": {
            "connections": []
          },
          "files": {
            "connections": []
          },
          "object": {
            "connections": []
          },
          "persistData": {
            "connections": []
          }
        },
        "outputs": {},
        "position": [
          1913.4229541700943,
          -70.12358183668874
        ],
        "name": "omnitool.chat_output"
      },
      "1339": {
        "id": 1339,
        "data": {
          "enabled": true,
          "image": "https://replicate.delivery/mgxm/4dc7763a-f234-4a7c-a85f-cb9e05e37cf8/COCO_val2014_000000579664.jpg",
          "model": "coco",
          "use_beam_search": false,
          "x-omni-comment": "Simple image captioning model using CLIP and GPT-2.\n\n**In this recipe**, the Image-to-text block is used to extract a initial understanding in description of the your current photo.",
          "xOmniEnabled": true
        },
        "inputs": {
          "image": {
            "connections": [
              {
                "node": 1326,
                "output": "images",
                "data": {}
              }
            ]
          },
          "enabled": {
            "connections": []
          },
          "model": {
            "connections": []
          },
          "use_beam_search": {
            "connections": []
          }
        },
        "outputs": {
          "output": {
            "connections": [
              {
                "node": 1407,
                "input": "prompt",
                "data": {}
              }
            ]
          }
        },
        "position": [
          48.944609064697175,
          -497.05526201888176
        ],
        "name": "omni-core-replicate:run.rmokady/clip_prefix_caption"
      },
      "1407": {
        "id": 1407,
        "data": {
          "instruction": "You are a helpful assistant interpreting user inputs for a generative image program. I'll provide you a photo description. You output a prompt in a string of keywords that contains the most important features from the description. Ensure to always include gender.\n\nHowever, for this photo, change the age to be in 20-25 year-old.\n\nYou will always prepend the following string to the prompt: \n\n\"Create a school yearbook photo with linen backdrop background. The photo is analog, close-up portrait, retro, faded.\"\n\nIf there is only one word, or no input, or the input doesn't describe a person, just ignore the input and be creative and add elements to make a fun interesting prompt yourself.\n\nFor example: \n\"Create a school yearbook photo with linen backdrop background. The photo is analog, close-up portrait, retro, faded. male, 20 year-old, vibrant polo shirt, bold horizontal stripes, popped collar, high-waisted jeans, feathered hair, chestnut brown, deep-set hazel eyes, confident smile\"",
          "model": "gpt-3.5-turbo",
          "prompt": "",
          "temperature": 0.3,
          "x-omni-comment": "Generate text using OpenAI's GPT models\n\n**In this recipe**, we leverage LLM to generate a prompt in the form of a string of keywords, which is used to guide the text-to-image generation model, such as Stable Diffusion XL. We prepend descriptive keywords and provide examples to manipulate the output.",
          "xOmniEnabled": true
        },
        "inputs": {
          "model": {
            "connections": []
          },
          "temperature": {
            "connections": []
          },
          "instruction": {
            "connections": []
          },
          "prompt": {
            "connections": [
              {
                "node": 1339,
                "output": "output",
                "data": {}
              }
            ]
          }
        },
        "outputs": {
          "text": {
            "connections": [
              {
                "node": 1018,
                "input": "prompt",
                "data": {}
              },
              {
                "node": 1338,
                "input": "text",
                "data": {}
              }
            ]
          }
        },
        "position": [
          550.3757390189606,
          -603.2736609192241
        ],
        "name": "openai.simpleChatGPT"
      }
    }
  },
  "api": {
    "fields": {}
  },
  "ui": {},
  "blockIds": [
    "omni-core-replicate:run.lucataco/faceswap",
    "omni-core-replicate:run.rmokady/clip_prefix_caption",
    "omni-core-replicate:run.stability-ai/sdxl",
    "omnitool.chat_input",
    "omnitool.chat_output",
    "omnitool.recipe_metadata",
    "openai.simpleChatGPT"
  ],
  "_flags": [
    "owner"
  ]
}